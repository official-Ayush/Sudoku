.puzzle-game-toolbar{
    background-color: white;
    /* width: 100%; */
    /* height: 100%; */
    padding: 8px;
    /* margin-bottom: auto ; */
}

.pz-row{
    display: flex;
    justify-content: space-between;
    align-items: center;
    /* border: solid black; */
}

.toolbar-left{
    margin-left: 3em;
}

.text-container{
    border-style: none;
    /* border-radius: 50%; */
    font-size: large;
    font-weight: bold;
    color: black;
    background-color: white;
}

.back-text a{
    text-decoration: none;
    color: black;
}

.toolbar-center{
    display: flex;
    justify-content: space-between;
}

.level-desktop{
    font-weight: 700;
    /* height: 1em; */
    margin-right: 3em;
}

.timer-desktop{
    display: flex;
    /* justify-content: space-between; */
}

.timer-value{
    margin-right: 0.8em;
}

.timer-pause{
    /* text-decoration: none; */
    /* color: black; */
    border: none;
    background: none;
}

.toolbar-right{
    /* justify-content: space-between; */
    margin-right: 3em;
}

.pz-toolbar-button{
    border-style: none;
    /* border-radius: 50%; */
    font-size: large;
    font-weight: bold;
    color: black;
    background-color: white;
}

.pz-dropdown-button{
    border-style: none;
    /* /* border-radius: 50% */
    font-size: large;
    font-weight: bold;
    color: black;
    background-color: white;
}

.pz-game-field{
    width: 30%;
    margin-left: 15em;
    /* display: inline-block; */
    /* height: ; */
}

/* Container for the Sudoku board */
#sudoku-board {
    display: grid;
    grid-template-columns: repeat(9, 40px);
    grid-template-rows: repeat(9, 40px);
    gap: 2px;
}

.cell {
    width: 40px;
    height: 40px;
    text-align: center;
    line-height: 40px;
    border: 1px solid #333;
    font-size: 20px;
}

.cell:nth-child(3n) {
    border-right: 2px solid #000;
}

.cell:nth-last-child(-n+9) {
    border-bottom: 2px solid #000;
}

.correct {
    background-color: #c8e6c9; /* Light green for correct */
}

.incorrect {
    background-color: #ffcdd2; /* Light red for incorrect */
}
